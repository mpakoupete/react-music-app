[{"C:\\Users\\mpakoupete\\Documents\\Mawaki - Doc\\MERN STACK\\MY REALISATION\\app-1-wave-music\\src\\index.js":"1","C:\\Users\\mpakoupete\\Documents\\Mawaki - Doc\\MERN STACK\\MY REALISATION\\app-1-wave-music\\src\\App.js":"2","C:\\Users\\mpakoupete\\Documents\\Mawaki - Doc\\MERN STACK\\MY REALISATION\\app-1-wave-music\\src\\components\\Nav.js":"3","C:\\Users\\mpakoupete\\Documents\\Mawaki - Doc\\MERN STACK\\MY REALISATION\\app-1-wave-music\\src\\components\\Player.js":"4","C:\\Users\\mpakoupete\\Documents\\Mawaki - Doc\\MERN STACK\\MY REALISATION\\app-1-wave-music\\src\\Components\\Nav.js":"5","C:\\Users\\mpakoupete\\Documents\\Mawaki - Doc\\MERN STACK\\MY REALISATION\\app-1-wave-music\\src\\Components\\Player.js":"6","C:\\Users\\mpakoupete\\Documents\\Mawaki - Doc\\MERN STACK\\MY REALISATION\\app-1-wave-music\\src\\Data\\Musicdata.js":"7","C:\\Users\\mpakoupete\\Documents\\Mawaki - Doc\\MERN STACK\\MY REALISATION\\app-1-wave-music\\src\\Components\\MusicsLibrary.js":"8","C:\\Users\\mpakoupete\\Documents\\Mawaki - Doc\\MERN STACK\\MY REALISATION\\app-1-wave-music\\src\\Components\\Music.js":"9"},{"size":150,"mtime":1610108632715,"results":"10","hashOfConfig":"11"},{"size":2427,"mtime":1610245003835,"results":"12","hashOfConfig":"11"},{"size":342,"mtime":1610110955975,"results":"13","hashOfConfig":"11"},{"size":880,"mtime":1610111326215,"results":"14","hashOfConfig":"11"},{"size":700,"mtime":1610316505880,"results":"15","hashOfConfig":"11"},{"size":4199,"mtime":1610316511099,"results":"16","hashOfConfig":"11"},{"size":2219,"mtime":1610244621861,"results":"17","hashOfConfig":"11"},{"size":921,"mtime":1610245273540,"results":"18","hashOfConfig":"11"},{"size":1838,"mtime":1610246476035,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1q2yg4u",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"27"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"22"},"C:\\Users\\mpakoupete\\Documents\\Mawaki - Doc\\MERN STACK\\MY REALISATION\\app-1-wave-music\\src\\index.js",[],["42","43"],"C:\\Users\\mpakoupete\\Documents\\Mawaki - Doc\\MERN STACK\\MY REALISATION\\app-1-wave-music\\src\\App.js",[],"C:\\Users\\mpakoupete\\Documents\\Mawaki - Doc\\MERN STACK\\MY REALISATION\\app-1-wave-music\\src\\components\\Nav.js",[],["44","45"],"C:\\Users\\mpakoupete\\Documents\\Mawaki - Doc\\MERN STACK\\MY REALISATION\\app-1-wave-music\\src\\components\\Player.js",["46"],"import React from 'react';\r\n\r\nconst Player = () => {\r\n    return (\r\n        <div className=\"Player\">\r\n            <div className=\"music-picture\">\r\n                <h1>music picture</h1>\r\n                <img src=\"\" alt=\"music picture\"/>\r\n            </div>\r\n            <div className=\"music-bar-controler\">\r\n                <p>Start time</p>\r\n                <input type=\"range\" name=\"\" id=\"\"/>\r\n                <p>End time</p>\r\n            </div>\r\n            <div className=\"music-controler-btn\">\r\n                <div className=\"back-btn\">\r\n                    <p>Back</p>\r\n                </div>\r\n                <div className=\"play-btn\">\r\n                    <p>Play</p>\r\n                </div>\r\n                <div className=\"forward-btn\">\r\n                    <p>Forward</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Player;","C:\\Users\\mpakoupete\\Documents\\Mawaki - Doc\\MERN STACK\\MY REALISATION\\app-1-wave-music\\src\\Components\\Nav.js",[],"C:\\Users\\mpakoupete\\Documents\\Mawaki - Doc\\MERN STACK\\MY REALISATION\\app-1-wave-music\\src\\Components\\Player.js",[],"C:\\Users\\mpakoupete\\Documents\\Mawaki - Doc\\MERN STACK\\MY REALISATION\\app-1-wave-music\\src\\Data\\Musicdata.js",[],"C:\\Users\\mpakoupete\\Documents\\Mawaki - Doc\\MERN STACK\\MY REALISATION\\app-1-wave-music\\src\\Components\\MusicsLibrary.js",[],"C:\\Users\\mpakoupete\\Documents\\Mawaki - Doc\\MERN STACK\\MY REALISATION\\app-1-wave-music\\src\\Components\\Music.js",["47"],"import React from 'react';\r\n\r\n/* A single Music Component that we will store in the Library Container\r\n    Each Music is represent by the Cover, the title, Artiste Name and the Audio to Play */\r\n\r\nconst Music = ( {isPlaying, setIsPlaying, audioRef, selectedMusic, setSelectedMusic, music, Musiclist, setMusiclist}) => {\r\n\r\n    /* When User selects a music in the library, this song is played automaticaly */\r\n    const handleSelectSong = async () => {\r\n\r\n        audioRef.current.pause()\r\n        setIsPlaying(!isPlaying);\r\n        \r\n        let selectedSongIndex = Musiclist.findIndex( (item) => item === music); // Find Index of What we selected on the Web Browser\r\n        let tempMusicList = [...Musiclist];\r\n\r\n        for (let index = 0; index < tempMusicList.length; index++) {\r\n            tempMusicList[index].active = false;                       // active is a Property Song to set the one that is active. We put all to false before setting true to the one tha has been selected\r\n        } \r\n\r\n        tempMusicList[selectedSongIndex].active = true;\r\n        \r\n        setSelectedMusic(music);\r\n        setMusiclist(tempMusicList);\r\n\r\n        await audioRef.current.play();  // We Play the Song\r\n        setIsPlaying(true);\r\n\r\n        console.log(audioRef);\r\n    }\r\n    \r\n\r\n    return (\r\n        // here we Want to style differently the Music that has been selected with the className \"selected-song\"\r\n        <div className={`music ${music.active? \"selected-song\" : \"\"} `} onClick={handleSelectSong} >\r\n        <div className=\"image-container\">\r\n            <img className=\"music-image\" src={music.cover} alt=\"music cover picture\"/>\r\n        </div>\r\n        <div className=\"music-description\">\r\n            <h3>{music.name}</h3>\r\n            <p>{music.artist}</p>\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Music;",{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"48","replacedBy":"52"},{"ruleId":"50","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":8,"column":17,"nodeType":"56","endLine":8,"endColumn":50},{"ruleId":"54","severity":1,"message":"55","line":37,"column":13,"nodeType":"56","endLine":37,"endColumn":87},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],["57"],["58"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]